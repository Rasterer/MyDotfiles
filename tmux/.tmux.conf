## 此类配置可以在命令行模式中输入show-options -g查询     
set-option -g base-index 1                        ## 窗口的初始序号；默认为0，这里设置为1     
set-option -g display-time 5000                   ## 提示信息的持续时间；设置足够的时间以避免看不清提示，单位为毫秒     
set-option -g repeat-time 1000                    ## 控制台激活后的持续时间；设置合适的时间以避免每次操作都要先激活控制台，单位为毫秒     
set-option -g status-keys vi                      ## 操作状态栏时的默认键盘布局；可以设置为vi或emacs     
set-option -g history-limit 4096
set -g window-status-current-fg yellow
set -g window-status-current-bg black
set -g status-fg white
set -g status-bg black
set -g status-right "#[fg=green]#(uptime.pl)#[default] • #[fg=green]#(cut -d ' ' -f 1-3 /proc/loadavg)#[default]"
set-option -g status-right "#(date +%H:%M' ')"    ## 状态栏右方的内容；这里的设置将得到类似23:59的显示     
set-option -g status-right-length 10              ## 状态栏右方的内容长度；建议把更多的空间留给状态栏左方（用于列出当前窗口）     
set-option -sg escape-time 0
set -g status-interval 60
    
## 此类设置可以在命令行模式中输入show-window-options -g查询     
set-window-option -g mode-keys vi    ## 复制模式中的默认键盘布局；可以设置为vi或emacs     

## 将激活控制台的快捷键由Ctrl+b修改为Ctrl+a，Ctrl+a是Screen的快捷键  
#set-option -g prefix C-a     
set-option -g   prefix M-a
unbind-key C-b     
bind-key M-a send-prefix     
    
## 添加自定义快捷键     
#bind-key z kill-session                     ## 按z结束当前会话；相当于进入命令行模式后输入kill-session     
bind-key h select-layout even-horizontal    ## 按h将当前面板布局切换为even-horizontal；相当于进入命令行模式后输入select-layout even-horizontal     
bind-key v select-layout even-vertical      ## 按v将当前面板布局切换为even-vertical；相当于进入命令行模式后输入select-layout even-vertical     

# Copy and paste like in vim
unbind [
bind -n F8 copy-mode
unbind p
bind -n M-p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
bind y run-shell "tmux show-buffer | xclip -sel clip -i" \; display-message "Copied tmux buffer to system clipboard"

# Window options
set-window-option -g clock-mode-colour blue
set-window-option -g clock-mode-style 24
#set-window-option -g monitor-activity on
set -g visual-activity on
set-window-option -g xterm-keys on
set-window-option -g automatic-rename on
set-window-option -g aggressive-resize off

# Window selection
unbind-key 1        ; bind-key 1        select-window -t 1
unbind-key 2        ; bind-key 2        select-window -t 2
unbind-key 3        ; bind-key 3        select-window -t 3
unbind-key 4        ; bind-key 4        select-window -t 4
unbind-key 5        ; bind-key 5        select-window -t 5
unbind-key 6        ; bind-key 6        select-window -t 6
unbind-key 7        ; bind-key 7        select-window -t 7
unbind-key 8        ; bind-key 8        select-window -t 8
unbind-key 9        ; bind-key 9        select-window -t 9
unbind-key 0        ; bind-key 0        select-window -t 10
unbind-key M-1      ; bind-key -n M-1   select-window -t 1
unbind-key M-2      ; bind-key -n M-2   select-window -t 2
unbind-key M-3      ; bind-key -n M-3   select-window -t 3
unbind-key M-4      ; bind-key -n M-4   select-window -t 4
unbind-key M-5      ; bind-key -n M-5   select-window -t 5
unbind-key M-6      ; bind-key -n M-6   select-window -t 6
unbind-key M-7      ; bind-key -n M-7   select-window -t 7
unbind-key M-8      ; bind-key -n M-8   select-window -t 8
unbind-key M-9      ; bind-key -n M-9   select-window -t 9
unbind-key M-0      ; bind-key -n M-0   select-window -t 10

# Pane move
bind-key k selectp -U
bind-key j selectp -D
bind-key h selectp -L
bind-key l selectp -R

# Split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind-key s split-window -v
bind-key v split-window -h

## enable mouse
#set-option -g mouse-select-pane on
#set-window-option -g mode-keys vi
#set-window-option -g mode-mouse on
# set-window-option -g monitor-activity off
# set-window-option -g monitor-content off
# set-option -g status-keys vi
